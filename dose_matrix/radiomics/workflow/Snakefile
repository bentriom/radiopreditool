
from functools import reduce
import pandas as pd
import os, sys, logging
sys.path.append("./workflow/scripts/")
import csv2nii, feature_extractor, check_dataset, report_checks, trainset, learning
from radiopreditool_utils import setup_logger, get_ncpus

MODEL_NAME = config["MODEL_NAME"]
RADIOMICS_NAME = config["RADIOMICS_NAME"] if "RADIOMICS_NAME" in config else MODEL_NAME
RADIOMICS_PARAMS_FILE = config["RADIOMICS_PARAMS_FILE"]
FCCSS_CLINICAL_VARIABLES = config["FCCSS_CLINICAL_VARIABLES"]
LABELS_SUPER_T_VOI = config["LABELS_SUPER_T_VOI"] if "LABELS_SUPER_T_VOI" in config else [""]
LABELS_T_VOI = config["LABELS_T_VOI"] if "LABELS_T_VOI" in config else [""]
EVENT_COL = "Pathologie_cardiaque"
DATE_EVENT_COL = "date_pathol_cardiaque"
NB_ESTIM_SCORE_MODELS = 10

DOSES_DATASET_DIR = config["DOSES_DATASET_DIR"]
DOSES_DATASET_SUBDIRS = config["DOSES_DATASET_SUBDIRS"] if "DOSES_DATASET_SUBDIRS" in config else [""]
FCCSS_CLINICAL_DATASET = config["FCCSS_CLINICAL_DATASET"]
RESULTS_DIR = config["RESULTS_DIR"]
NII_DIR = RESULTS_DIR + "nii/"
METADATA_DIR = RESULTS_DIR + "metadata/"
RADIOMICS_DIR = RESULTS_DIR + "extraction/" + RADIOMICS_NAME + "/"
ANALYZES_DIR = RESULTS_DIR + "analyzes/" + MODEL_NAME + "/"

# Create useful variables for rules based on configuration
def addslash(subdir):
    return (subdir if subdir == "" else subdir + "/")
def get_patient_file(newdosi_file):
    split_newdosi = newdosi_file.split("_")
    return split_newdosi[0] + "_" + split_newdosi[1] + "_" + split_newdosi[2][0:-1]
list_newdosi_files = [addslash(subdir) + f.split(".")[0]  for subdir in DOSES_DATASET_SUBDIRS for f in os.listdir(DOSES_DATASET_DIR + subdir) if ".csv.gz" in f]
list_newdosi_patients = list(set([get_patient_file(newdosi) for newdosi in list_newdosi_files]))
str_cmd_dataset_subdirs = reduce(lambda a,b:a+b, [sdir + "," for sdir in DOSES_DATASET_SUBDIRS])[0:-1]

# Command to gather the computed radiomics
cmd_concatenate_radiomics = "cat '" + RADIOMICS_DIR + "header.csv' "
if DOSES_DATASET_SUBDIRS == [""]:
    cmd_concatenate_radiomics += "'" + RADIOMICS_DIR + "'newdosi*"
else:
    cmd_concatenate_radiomics +=  "'" + RADIOMICS_DIR + "'{{" + str_cmd_dataset_subdirs + "}}/*"
cmd_concatenate_radiomics += " > '" + RADIOMICS_DIR + "'dose_matrix_radiomics.csv"
cmd_concatenate_radiomics += " && gzip '" + RADIOMICS_DIR + "'dose_matrix_radiomics.csv"

# Utils
def get_newdosi_files(wildcards):
    return expand(DOSES_DATASET_DIR + "{newdosi_file}.csv.gz", newdosi_file = [newdosi_file for newdosi_file in list_newdosi_files if wildcards.newdosi_patient in newdosi_file])


# Rules

include: "rules/metadata.smk"
include: "rules/extract_radiomics.smk"
include: "rules/learning_datasets.smk"
include: "rules/viz.smk"
include: "rules/feature_elimination.smk"
include: "rules/cox_learning_python.smk"
include: "rules/cox_learning_R.smk"
include: "rules/rsf_learning_R.smk"

onstart:
    # Directory creations
    for newdir in [RESULTS_DIR, NII_DIR, RADIOMICS_DIR, METADATA_DIR, ANALYZES_DIR]:
        os.makedirs(newdir, exist_ok = True)
    if os.path.isfile(NII_DIR + "csv2nii.log"):
        os.remove(NII_DIR + "csv2nii.log")
    if os.path.isfile(RADIOMICS_DIR + "feature_extraction.log"):
        os.remove(RADIOMICS_DIR + "feature_extraction.log")

rule all:
    input: 
        RADIOMICS_DIR + "dose_matrix_radiomics.csv.gz"

